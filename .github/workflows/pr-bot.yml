name: AI Passport PR Bot


on:
  workflow_dispatch:
    inputs:
      upstream:
        description: "Upstream repo to open PR against (owner/repo)"
        required: true
      base_branch:
        description: "Base branch on upstream"
        required: false
        default: "main"
      title:
        description: "PR title"
        required: false
        default: "Add AI Passport (.passport) dataset summary"
      body:
        description: "Extra text for PR body (optional)"
        required: false
        default: ""

permissions:
  contents: write   # write to YOUR fork to push the branch

jobs:
  pr:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run scanner to generate .passport
        run: |
          python scan.py
          ls -la .passport || true

      - name: Create branch and commit .passport
        id: commit
        run: |
          set -e
          BRANCH="ai-passport/${{ github.run_id }}"
          echo "BRANCH=$BRANCH" >> $GITHUB_OUTPUT
          git config user.email "action@github.com"
          git config user.name "ai-passport-bot"
          git checkout -b "$BRANCH"
          git add .passport || true
          if git diff --staged --quiet; then
            echo "no_changes=true" >> $GITHUB_OUTPUT
            echo "No changes to commit."
          else
            git commit -m "chore: add/update AI Passport (.passport)"
            git push --set-upstream origin "$BRANCH"
          fi

      - name: Stop if nothing to PR
        if: steps.commit.outputs.no_changes == 'true'
        run: echo "Nothing to PR." && exit 0

      - name: Create PR via GitHub REST API
        env:
          GH_TOKEN: ${{ secrets.PR_BOT_TOKEN }}
          UPSTREAM: ${{ github.event.inputs.upstream }}
          BASE: ${{ github.event.inputs.base_branch }}
          TITLE: ${{ github.event.inputs.title }}
          EXTRA: ${{ github.event.inputs.body }}
          FORK_OWNER: ${{ github.repository_owner }}
          BRANCH: ${{ steps.commit.outputs.BRANCH }}
        run: |
          set -e
          sudo apt-get update >/dev/null 2>&1 || true
          sudo apt-get install -y jq >/dev/null 2>&1 || true
          BODY="This PR adds the generated **.passport/** dataset summary (EU-AI-Act-ready).

Generated by AI Passport Scanner in fork **${FORK_OWNER}/${GITHUB_REPOSITORY#*/}**
Run ID: ${GITHUB_RUN_ID}

${EXTRA}"
          JSON=$(jq -n \
            --arg title "$TITLE" \
            --arg head "${FORK_OWNER}:${BRANCH}" \
            --arg base "$BASE" \
            --arg body "$BODY" \
            '{title:$title, head:$head, base:$base, body:$body}')

          echo "Creating PR to $UPSTREAM (base: $BASE, head: ${FORK_OWNER}:${BRANCH})"
          curl -sS -H "Authorization: token ${GH_TOKEN}" \
               -H "Accept: application/vnd.github+json" \
               -X POST "https://api.github.com/repos/${UPSTREAM}/pulls" \
               -d "$JSON"
