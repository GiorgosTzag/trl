name: AI Passport PR Bot

on:
  # Manual run still works if the button appears later
  workflow_dispatch:
    inputs:
      upstream:
        description: "Upstream repo (owner/repo) — optional; auto-detected if empty"
        required: false
        default: ""
      base_branch:
        description: "Upstream base branch — optional; auto-detected if empty"
        required: false
        default: ""
      title:
        description: "PR title"
        required: false
        default: "Add AI Passport (.passport) dataset summary"
      body:
        description: "Extra text for PR body (optional)"
        required: false
        default: ""

  # ✅ Commit-based trigger: create/modify any file under this path
  push:
    paths:
      - ".github/trigger/pr-bot/**"

permissions:
  contents: write   # allow pushing branch to YOUR fork

jobs:
  pr:
    # Only run when manual or trigger path fires
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure scan.py exists
        run: |
          test -f scan.py || { echo "scan.py not found at repo root"; exit 1; }

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run scanner to generate .passport
        run: |
          python scan.py
          ls -la .passport || true

      - name: Determine upstream & base branch (auto)
        id: detect
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          sudo apt-get update >/dev/null 2>&1 || true
          sudo apt-get install -y jq >/dev/null 2>&1 || true

          # Fetch info about THIS repo; if it's a fork, it has .parent
          INFO=$(curl -sS -H "Authorization: Bearer ${GH_TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${GH_REPO}")

          PARENT=$(echo "$INFO" | jq -r '.parent.full_name // empty')
          DEFAULT=$(echo "$INFO" | jq -r '.parent.default_branch // empty')

          # Allow manual overrides from workflow_dispatch inputs
          UPSTREAM="${{ github.event.inputs.upstream }}"
          BASE="${{ github.event.inputs.base_branch }}"

          if [ -z "$UPSTREAM" ] && [ -n "$PARENT" ]; then
            UPSTREAM="$PARENT"
          fi
          if [ -z "$BASE" ] && [ -n "$DEFAULT" ]; then
            BASE="$DEFAULT"
          fi

          if [ -z "$UPSTREAM" ] || [ -z "$BASE" ]; then
            echo "Could not auto-detect upstream/base. Supply them via workflow_dispatch."
            echo "UPSTREAM=" >> $GITHUB_OUTPUT
            echo "BASE=" >> $GITHUB_OUTPUT
            exit 1
          fi

          echo "UPSTREAM=$UPSTREAM" >> $GITHUB_OUTPUT
          echo "BASE=$BASE" >> $GITHUB_OUTPUT
          echo "Detected: $UPSTREAM (base: $BASE)"

      - name: Create branch and commit .passport
        id: commit
        run: |
          set -e
          BRANCH="ai-passport/${{ github.run_id }}"
          echo "BRANCH=$BRANCH" >> $GITHUB_OUTPUT
          git config user.email "action@github.com"
          git config user.name "ai-passport-bot"
          git checkout -b "$BRANCH"
          git add .passport || true
          if git diff --staged --quiet; then
            echo "no_changes=true" >> $GITHUB_OUTPUT
            echo "No changes to commit."
          else
            git commit -m "chore: add/update AI Passport (.passport)"
            git push --set-upstream origin "$BRANCH"
          fi

      - name: Stop if nothing to PR
        if: steps.commit.outputs.no_changes == 'true'
        run: echo "Nothing to PR." && exit 0

      - name: Create PR via GitHub REST API
        env:
          GH_TOKEN: ${{ secrets.PR_BOT_TOKEN }}
          UPSTREAM: ${{ steps.detect.outputs.UPSTREAM }}
          BASE: ${{ steps.detect.outputs.BASE }}
          FORK_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          BRANCH: ${{ steps.commit.outputs.BRANCH }}
          TITLE: ${{ github.event.inputs.title || 'Add AI Passport (.passport) dataset summary' }}
          EXTRA: ${{ github.event.inputs.body }}
        run: |
          set -e
          sudo apt-get update >/dev/null 2>&1 || true
          sudo apt-get install -y jq >/dev/null 2>&1 || true

          BODY="This PR adds the generated **.passport/** dataset summary (EU-AI-Act-ready).

Generated by AI Passport Scanner in fork **${FORK_OWNER}/${REPO_NAME}**
Run ID: ${GITHUB_RUN_ID}

${EXTRA}"

          JSON=$(jq -n \
            --arg title "$TITLE" \
            --arg head "${FORK_OWNER}:${BRANCH}" \
            --arg base "$BASE" \
            --arg body "$BODY" \
            '{title:$title, head:$head, base:$base, body:$body}')

          echo "Creating PR to $UPSTREAM (base: $BASE, head: ${FORK_OWNER}:${BRANCH})"
          curl -sS -H "Authorization: token ${GH_TOKEN}" \
               -H "Accept: application/vnd.github+json" \
               -X POST "https://api.github.com/repos/${UPSTREAM}/pulls" \
               -d "$JSON"
